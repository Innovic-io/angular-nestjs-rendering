scalar DateTime

scalar Upload

type Query {
  getOwnerById(_id: ID!): Owner
  getOwners: [Owner]
  getPetById(_id: ID!): Pet
}

type Mutation {
  createPet(name: String!, species: PetSpeciesInput!,
    age: Int, owner: String!, dateAdopted: DateTime): Owner
  updatePet(_id: ID!, name: String,
    species: PetSpeciesInput, age: Int
  ): Owner

  updatePetsOwner(petID: ID!, owner: ID!): Owner
  deletePet(_id: ID!): Pet

  createOwner(first_name: String!,
    last_name: String!, mobile: String,
    email: String ): Owner
  updateOwner(_id: ID!, first_name: String,
    last_name: String, mobile: String,
    email: String): Owner
  deleteOwner(_id: ID!): Owner

  addAccountToOwner(ownerId: ID!, amount: Int!): Account
  uploadProfilePicture(id: Int!, files: [Upload!]!): String
}

input PetSpeciesInput {
  speciesName: String!
  speciesFamily: String
  speciesType: SpeciesTypeEnum!
}


type PetSpecies {
  speciesName: String!
  speciesFamily: String
  speciesType: SpeciesTypeEnum
}

type Owner {
  _id: ID!
  first_name: String
  last_name: String
  mobile: String
  email: String
  pets: [Pet]
  account: [Account]
}

type Pet {
  _id: ID!
  name: String
  species: PetSpecies
  age: Int
  dateAdopted: DateTime
}

type Account {
  _id: ID!
  amount: Int
}

enum SpeciesTypeEnum {
  BIRD
  MAMMAL
  BUG
  FISH
}

type Subscription {
  dateChanged(something: String): Pet
}
