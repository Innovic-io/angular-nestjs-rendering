type Query {
  getPets: [Pet]
  getPetById(id: ID!): Pet
  owner(id: ID!): Owner
  getOwners: [Owner]
}

scalar DateTime

input PetSpeciesInput {
  speciesName: String!
  speciesFamily: String
  speciesType: SpeciesTypeEnum!
}

type Mutation {
  createPet(name: String!, species: PetSpeciesInput!,
    age: Int, owner: ID!): Owner
  updatePet(_id: ID!, name: String,
    species: PetSpeciesInput, age: Int,
    owner: ID
  ): Pet
  removeOwnerFromPet(petID: ID!): Pet
  changePetOwner(petID: ID!, owner: ID!): Owner
  deletePet(id: ID!): Pet

  createOwner(first_name: String!,
    last_name: String!, mobile: String,
    email: String ): Owner
  updateOwner(id: ID!, first_name: String,
  last_name: String, mobile: String,
  email: String): Owner
}

type PetSpecies {
  speciesName: String!
  speciesFamily: String
  speciesType: SpeciesTypeEnum
}

type Owner {
  _id: ID!
  first_name: String
  last_name: String
  mobile: String
  email: String
  pets: [Pet]
}

type Pet {
  _id: ID!
  name: String
  species: PetSpecies
  age: Int
  owner: ID
  dateAdopted: String!
}

enum SpeciesTypeEnum {
  BIRD
  MAMMAL
  BUG
  FISH
}
